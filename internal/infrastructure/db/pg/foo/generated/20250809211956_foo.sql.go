// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0
// source: 20250809211956_foo.sql

package generated

import (
	"context"
)

const checkExistsFooByName = `-- name: CheckExistsFooByName :one
SELECT EXISTS(
    SELECT 1 FROM foo WHERE name = $1 LIMIT 1
) AS exists
`

func (q *Queries) CheckExistsFooByName(ctx context.Context, name string) (bool, error) {
	row := q.db.QueryRow(ctx, checkExistsFooByName, name)
	var exists bool
	err := row.Scan(&exists)
	return exists, err
}

const insertOneFoo = `-- name: InsertOneFoo :one
INSERT INTO foo (name) VALUES
($1) RETURNING id, name
`

func (q *Queries) InsertOneFoo(ctx context.Context, name string) (Foo, error) {
	row := q.db.QueryRow(ctx, insertOneFoo, name)
	var i Foo
	err := row.Scan(&i.ID, &i.Name)
	return i, err
}
